cetesb <- readRDS('02_data/raw_data/cetesb_010320_140420.Rds')
pin <- cetesb[[44]]
head(pin)
cetesb.data <- readRDS('02_data/raw_data/cetesb_010320_140420.Rds')
cetesb_stations <- read.table('02_data/pre_processed_data/cetesb2017_latlon.dat',
header = T, sep = ',', dec = '.',
stringsAsFactors = F)
head(cetesb_stations)
iconv(cetesb_stations$name, from = 'UTF-8', to = 'ASCII//TRANSLIT')
# Translating spetial characters
cetesb_stations$name <- iconv(cetesb_stations$name, from = 'UTF-8', to = 'ASCII//TRANSLIT')
gsub(' ', '_', cetesb_stations$name)
# Replacing empty spaces for underscore
cetesb_stations$name <- gsub(' ', '_', cetesb_stations$name)
unique(pin$est)
unique(na.omit(pin$est))
WriteStationData<- function(df){
station_name <- unique(na.omit(df$est))
station_name <- iconv(station_name, from = 'UTF-8', to = 'ASCII//TRANSLIT')
station_name <- gsub(' ', '_', station_name)
file_name <- paste(station_name, '010320-140420.csv', sep = '_')
write.table(df, file_name, quote = F, row.names = F, sep = ',')
}
WriteStationData(pin)
WriteStationData<- function(df){
station_name <- unique(na.omit(df$est))
station_name <- iconv(station_name, from = 'UTF-8', to = 'ASCII//TRANSLIT')
station_name <- gsub(' ', '_', station_name)
path <- './02_data/cetesb_data/'
file_name <- paste(path,station_name, '_010320-140420.csv')
write.table(df, file_name, quote = F, row.names = F, sep = ',')
}
WriteStationData(pin)
WriteStationData<- function(df){
station_name <- unique(na.omit(df$est))
station_name <- iconv(station_name, from = 'UTF-8', to = 'ASCII//TRANSLIT')
station_name <- gsub(' ', '_', station_name)
path <- './02_data/cetesb_data/'
file_name <- paste0(path, station_name, '_010320-140420.csv')
write.table(df, file_name, quote = F, row.names = F, sep = ',')
}
WriteStationData(pin)
lapply(cetesb_data, WriteStationData)
lapply(cetesb_data, WriteStationData)
# Loading pollutant information for all cetesb stations
cetesb_data <- readRDS('02_data/raw_data/cetesb_010320_140420.Rds')
lapply(cetesb_data, WriteStationData)
rm(list = ls())
cetesb_data <- readRDS("./02_data/raw_data/cetesb_010320_140420.Rds")
# Selecting study period
cetesb <- lapply(cetesb_data, function(df) selectByDate(df, start='17/03/2020', end = '13/04/2020'))
library(openair)
library(data.table)
cetesb <- lapply(cetesb_data, function(df) selectByDate(df, start='17/03/2020', end = '13/04/2020'))
cetesb <- lapply(cetesb, function(df) {
df$nox_mi <- df$no + df$no2
return(df)})
# Calculating daily average
cetesb_mean_day <- lapply(cetesb, function(df) timeAverage(df, avg.time = 'day'))
iso_index <- fread('02_data/pre_processed_data/isolation_index_five_mun_sp_170320_130420.csv',
dec = ',', header=F, sep =';')
iso_index
iso_index <- dcast(melt(iso, id.vars = "V1"), variable ~ V1)
names(iso) <- c( 'var','camp', 'gru', 'sbc', 'sjc', 'sp')
# Pivoting table, original data has day as columns
iso_index <- dcast(melt(iso_index, id.vars = "V1"), variable ~ V1)
names(iso_index) <- c( 'var','camp', 'gru', 'sbc', 'sjc', 'sp')
# Selecting cetesb daily mean
pin <- cetesb_mean_day[[44]] # Pinheiros
gru <- cetesb_mean_day[[24]] # Gurarulhos
camp <- cetesb_mean_day[[7]] # Campinas
sbc <- cetesb_mean_day[[52]] # Sao Bernardo do Campo
sjc <- cetesb_mean_day[[54]] # Sao Jose dos Campos
PlotPolIso <- function(cet, iso, pol, city, title, legend.pos = 'topleft'){
par(mar = c(5, 4, 4, 4) + 0.3)
plot(cet[['date']], cet[[pol]], t = 'l', lwd = 3,
ylim = range(pin[[pol]], gru[[pol]],camp[[pol]], sbc[[pol]]),
col = 'dodgerblue2',
ylab = expression("NO"[X] * " (" * mu * "g/m" ^3 * ")"),
xlab = '2020',
main = title)
points(cet[['date']], cet[[pol]], col = 'dodgerblue2', pch = 19)
par(new = T)
plot(cet[['date']],iso[[city]], t = 'l', lwd = 3,
ylim = c(35, 65),  col = 'chocolate2', ylab = '', xlab = '', axes =F)
points(cet[['date']], iso[[city]], col = 'chocolate2', pch = 19)
axis(4)
axis(1, at = 1:7, label =6:12)
mtext("Isolation index (%)", side=4, line=3)
legend(legend.pos, lwd = 2.5, lty = 1, col = c('dodgerblue2', 'chocolate2'),
legend = c('NOx', 'Isolation index'), bty = 'n')
box()
}
PlotPolIso(gru, iso, 'nox_mi', 'gru', 'Guarulhos')
PlotPolIso(gru, iso_index, 'nox_mi', 'gru', 'Guarulhos')
dev.off()
par(mfrow = c(2, 2))
PlotPolIso(pin, iso, 'nox_mi', 'sp', 'Pinheiros', 'bottomright')
PlotPolIso(gru, iso, 'nox_mi', 'gru', 'Guarulhos')
PlotPolIso(camp, iso, 'nox_mi', 'camp', 'Campinas')
PlotPolIso(sbc, iso, 'nox_mi', 'sbc', 'Sao Bernardo do Campo')
dev.off()
par(mfrow = c(2, 2))
PlotPolIso(pin, iso, 'nox_mi', 'sp', 'Pinheiros', 'bottomright')
dev.off()
par(mfrow = c(2, 2))
PlotPolIso(pin, iso_index, 'nox_mi', 'sp', 'Pinheiros', 'bottomright')
PlotPolIso(gru, iso_index, 'nox_mi', 'gru', 'Guarulhos')
PlotPolIso(camp, iso_index, 'nox_mi', 'camp', 'Campinas')
PlotPolIso(sbc, iso_index, 'nox_mi', 'sbc', 'Sao Bernardo do Campo')
dev.off()
par(mfrow = c(2, 2))
PlotPolIso(pin, iso_index, 'nox_mi', 'sp', 'Pinheiros', 'bottomright')
PlotPolIso(gru, iso_index, 'nox_mi', 'gru', 'Guarulhos')
PlotPolIso(camp, iso_index, 'nox_mi', 'camp', 'Campinas')
PlotPolIso(sbc, iso_index, 'nox_mi', 'sbc', 'Sao Bernardo do Campo')
png('03_output_figs/nox_vs_iso_index.png', height = 710, width = 1000)
par(mfrow = c(2, 2))
PlotPolIso(pin, iso_index, 'nox_mi', 'sp', 'Pinheiros', 'bottomright')
PlotPolIso(gru, iso_index, 'nox_mi', 'gru', 'Guarulhos')
PlotPolIso(camp, iso_index, 'nox_mi', 'camp', 'Campinas')
PlotPolIso(sbc, iso_index, 'nox_mi', 'sbc', 'Sao Bernardo do Campo')
dev.off()
png('03_output_figs/nox_vs_iso_index.png', height = 355, width = 500)
par(mfrow = c(2, 2))
PlotPolIso(pin, iso_index, 'nox_mi', 'sp', 'Pinheiros', 'bottomright')
PlotPolIso(gru, iso_index, 'nox_mi', 'gru', 'Guarulhos')
PlotPolIso(camp, iso_index, 'nox_mi', 'camp', 'Campinas')
PlotPolIso(sbc, iso_index, 'nox_mi', 'sbc', 'Sao Bernardo do Campo')
dev.off()
png('03_output_figs/nox_vs_iso_index.png', height = 255, width = 800)
par(mfrow = c(2, 2))
PlotPolIso(pin, iso_index, 'nox_mi', 'sp', 'Pinheiros', 'bottomright')
PlotPolIso(gru, iso_index, 'nox_mi', 'gru', 'Guarulhos')
PlotPolIso(camp, iso_index, 'nox_mi', 'camp', 'Campinas')
PlotPolIso(sbc, iso_index, 'nox_mi', 'sbc', 'Sao Bernardo do Campo')
dev.off()
png('03_output_figs/nox_vs_iso_index.png', height = 710, width = 1000)
par(mfrow = c(2, 2))
PlotPolIso(pin, iso_index, 'nox_mi', 'sp', 'Pinheiros', 'bottomright')
PlotPolIso(gru, iso_index, 'nox_mi', 'gru', 'Guarulhos')
PlotPolIso(camp, iso_index, 'nox_mi', 'camp', 'Campinas')
PlotPolIso(sbc, iso_index, 'nox_mi', 'sbc', 'Sao Bernardo do Campo')
dev.off()
rm(list = ls())
cetesb_data <- readRDS('02_data/raw_data/cetesb_010320_140420.Rds')
cetesb_latlon <- read.table('cetesb2017_latlon.dat', header = T, stringsAsFactors = F,
sep = ',', dec = '.')
# Loading cetesb station latitude and longitude
cetesb_latlon <- read.table('02_data/pre_processed_data/cetesb2017_latlon.dat',
header = T, stringsAsFactors = F,
sep = ',', dec = '.')
cet.sem <- lapply(cet20, function(df) selectByDate(df, start = "15/03/2020", end = "21/03/2020")) # Week with no restrictions
cet.w1 <- lapply(cet20, function(df) selectByDate(df, start = "22/03/2020", end = "28/03/2020")) # First week quarantine
cet.w2 <- lapply(cet20, function(df) selectByDate(df, start = "29/03/2020", end = "04/04/2020")) # Second week of quarantine
cet.w3 <- lapply(cet20, function(df) selectByDate(df, start = '05/04/2020', end = "11/04/2020")) # Third week of quarantine
cet.sem <- lapply(cetesb_data,
function(df) selectByDate(df, start = "15/03/2020", end = "21/03/2020")) # Week with no restrictions
cet.w1 <- lapply(cetesb_data,
function(df) selectByDate(df, start = "22/03/2020", end = "28/03/2020")) # First week quarantine
cet.w2 <- lapply(cetesb_data,
function(df) selectByDate(df, start = "29/03/2020", end = "04/04/2020")) # Second week of quarantine
cet.w3 <- lapply(cetesb_data,
function(df) selectByDate(df, start = '05/04/2020', end = "11/04/2020")) # Third week of quarantine
# Calculating NOX in ug/m3
cet.sem <- lapply(cet.sem, function(df) {
df$nox_mi <- df$no + df$no2
return(df)
})
cet.w1 <- lapply(cet.w1, function(df) {
df$nox_mi <- df$no + df$no2
return(df)
})
cet.w2 <- lapply(cet.w2, function(df) {
df$nox_mi <- df$no + df$no2
return(df)
})
cet.w3 <- lapply(cet.w3, function(df) {
df$nox_mi <- df$no + df$no2
return(df)
})
rm(list = ls())
sem_mean <- lapply(sem_mean, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w1_mean <- lapply(cetesb_w1, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w2_mean <- lapply(cetesb_w2, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w3_mean <- lapply(cetesb_w3, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
library('openair')
# Loading pollutant information for all cetesb stations
cetesb_data <- readRDS('02_data/raw_data/cetesb_010320_140420.Rds')
# Loading cetesb station latitude and longitude
cetesb_latlon <- read.table('02_data/pre_processed_data/cetesb2017_latlon.dat',
header = T, stringsAsFactors = F,
sep = ',', dec = '.')
# Selecting dates
cetesb_sem <- lapply(cetesb_data,
function(df) selectByDate(df, start = "15/03/2020", end = "21/03/2020")) # Week with no restrictions
cetesb_w1 <- lapply(cetesb_data,
function(df) selectByDate(df, start = "22/03/2020", end = "28/03/2020")) # First week quarantine
cetesb_w2 <- lapply(cetesb_data,
function(df) selectByDate(df, start = "29/03/2020", end = "04/04/2020")) # Second week of quarantine
cetesb_w3 <- lapply(cetesb_data,
function(df) selectByDate(df, start = '05/04/2020', end = "11/04/2020")) # Third week of quarantine
# Calculating NOX in ug/m3
cetesb_sem <- lapply(cetesb_sem, function(df) {
df$nox_mi <- df$no + df$no2
return(df)
})
cetesb_w1 <- lapply(cetesb_w1, function(df) {
df$nox_mi <- df$no + df$no2
return(df)
})
cetesb_w2 <- lapply(cetesb_w2, function(df) {
df$nox_mi <- df$no + df$no2
return(df)
})
cetesb_w3 <- lapply(cetesb_w3, function(df) {
df$nox_mi <- df$no + df$no2
return(df)
})
# Calculating mean for each period
sem_mean <- lapply(sem_mean, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w1_mean <- lapply(cetesb_w1, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w2_mean <- lapply(cetesb_w2, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w3_mean <- lapply(cetesb_w3, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
sem_mean <- lapply(cetesb_mean, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w1_mean <- lapply(cetesb_w1, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w2_mean <- lapply(cetesb_w2, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w3_mean <- lapply(cetesb_w3, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
sem_mean <- lapply(cetesb_sem, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w1_mean <- lapply(cetesb_w1, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w2_mean <- lapply(cetesb_w2, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
w3_mean <- lapply(cetesb_w3, function(df) colMeans(df[c(2:8, 10)], na.rm = T))
aqs_sem <- as.data.frame(do.call(rbind, sem_mean))
aqs_w1 <- as.data.frame(do.call(rbind, w1_mean))
aqs_w2 <- as.data.frame(do.call(rbind, w2_mean))
aqs_w3 <- as.data.frame(do.call(rbind, w3_mean))
dif_w1_sem <- (aqs_w1 - aqs_sem) / sem * 100 # 1st week of quarantine vs Week we no restriction
dif_w2_w1 <- (aqs_w2 - aqs_w1) / w1 * 100 # 2nd week of quarantine vs 1st Week of quarantine
dif_w3_w1 <- (aqs_w3 - aqs_w1) / w1 * 100 # 3th week of quarantine vs 1st Week of quarantine
dif_w1_sem <- (aqs_w1 - aqs_sem) / aqs_sem * 100 # 1st week of quarantine vs Week we no restriction
dif_w2_w1 <- (aqs_w2 - aqs_w1) / aqs_w1 * 100 # 2nd week of quarantine vs 1st Week of quarantine
dif_w3_w1 <- (aqs_w3 - aqs_w1) / aqs_w1 * 100 # 3th week of quarantine vs 1st Week of quarantine
dif_w1_sem_lalo <- cbind(cetesb_latlon, dif_w1_sem)
dif_w2_w1_lalo <- cbind(cetesb_latlon, dif_w2_w1)
dif_w3_w1_lalo <- cbind(cetesb_latlon, dif_w3_w1)
head(dif_w1_sem_lalo)
write.table(dif_w1_sem_lalo, '02_data/pre_processed_data/dif_w1_sem.csv',
sep = ',', row.names = F, quote = F)
write.table(dif_w2_w1_lalo, '02_data/pre_processed_data/dif_w2_w1.csv',
sep = ',', row.names = F, quote = F)
write.table(dif_w3_w1_lalo, '02_data/pre_processed_data/dif_w3_w1.csv',
sep = ',', row.names = F, quote = F)
